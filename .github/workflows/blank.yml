name: CI

on:
#   push:
#     branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env: 
  PROJECT_ID: ${{ secrets.RUN_PROJECT }}

  PIPELINE_NAME: penguin-vertex-training
  MODULE_ROOT: gs://${{ secrets.PIPELINE_GCS_BUCKET }}/pipeline_module/$PIPELINE_NAME
  DATA_ROOT: gs://${{ secrets.PIPELINE_GCS_BUCKET }}/data/$PIPELINE_NAME

  BRANCH: main
  REPO_URL: https://github.com/deep-diver/Model-Training-as-a-CI-CD-System
  PIPELINE_ROOT: gs://${{ secrets.PIPELINE_GCS_BUCKET }}/pipeline_root/$PIPELINE_NAME
  SERVING_MODEL_DIR: gs://${{ secrets.PIPELINE_GCS_BUCKET }}/serving_model/$PIPELINE_NAME
  CICD_IMAGE_URI: gcr.io/tfx-oss-public/tfx:1.0.0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: google-github-actions/setup-gcloud@master
        with:
          version: '286.0.0'
          service_account_email: ${{ secrets.RUN_SA_EMAIL }}
          service_account_key: ${{ secrets.RUN_SA_KEY }}
          project_id: ${{ secrets.RUN_PROJECT }}

      - name: check if components folder has anything changed
        uses: dorny/paths-filter@v2
        id: component-changes
        with:
            filters: |
                src:
                  - 'components/**'

      - name: check if src folder has anything changed
        uses: dorny/paths-filter@v2
        id: model-changes
        with:
            filters: |
                src:
                  - 'scripts/**'

      - name: trigger cloud build based on component changes
        if: steps.component-changes.outputs.components == 'true'
        run: |
          gcloud builds submit --no-source --timeout=60m \ 
          --config build/pipeline-deployment.yaml \
          --substitutions \
            _REPO_URL=$REPO_URL,\
            _BRANCH=$BRANCH,\
            _PROJECT=$GOOGLE_CLOUD_PROJECT},\
            _REGION=$PROJECT_ID,\
            _PIPELINE_NAME=$PIPELINE_NAME,\
            _PIPELINE_ROOT=$PIPELINE_ROOT,\
            _MODULE_ROOT=$MODULE_ROOT,\
            _DATA_ROOT=$DATA_ROOT,\
            _SERVING_MODEL_DIR={SERVING_MODEL_DIR},\
            _CICD_IMAGE_URI={CICD_IMAGE_URI}\
          --machine-type=e2-highcpu-8

      - name: trigger cloud build based on modeling changes
        if: steps.model-changes.outputs.model == 'true'
        run: |
          gcloud builds submit --no-source --timeout=60m \ 
          --config build/pipeline-trigger.yaml \
          --substitutions \ 
            _REPO_URL=$REPO_URL,\
            _BRANCH=$BRANCH,\
            _PROJECT=$GOOGLE_CLOUD_PROJECT},\
            _REGION=$PROJECT_ID,\
            _PIPELINE_NAME=$PIPELINE_NAME,\
            _PIPELINE_ROOT=$PIPELINE_ROOT,\
            _MODULE_ROOT=$MODULE_ROOT,\
            _DATA_ROOT=$DATA_ROOT,\
            _SERVING_MODEL_DIR={SERVING_MODEL_DIR},\
            _CICD_IMAGE_URI={CICD_IMAGE_URI}\          
          --machine-type=e2-highcpu-8
